def linear_prediction_coding(signal):
    # find the auto correlation coefficient.
    auto_coeff = zeros(11)
    for i in range(11):
        for j in range(i, len(signal)):
            auto_coeff[i] += signal[j] * signal[j - 1]

    # find the lpc coefficient.
    coeff_matrix = zeros((10, 10))
    for i in range(10):
        for j in range(i):
            coeff_matrix[i][j] = auto_coeff[i - j]
        for j in range(i, 10):
            coeff_matrix[i][j] = auto_coeff[j - i]
    coeff_vector = zeros(10)
    for i in range(10):
        coeff_vector[i] = auto_coeff[i + 1]
    coeff_vector = coeff_vector.T
    inversed_coeff_matrix = np.linalg.inv(coeff_matrix)
    result = inversed_coeff_matrix @ coeff_vector
    print(result)

# The result is [ 16.06647913 -13.9148047  -13.21032475  12.82550748  12.97226157 -12.04871388 -13.66197011  12.26167462  14.80300765 -15.09512202]